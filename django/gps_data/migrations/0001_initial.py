# Generated by Django 5.2.4 on 2025-07-06 19:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='APILog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('endpoint', models.CharField(max_length=200)),
                ('method', models.CharField(max_length=10)),
                ('status_code', models.IntegerField()),
                ('device_imei', models.CharField(blank=True, max_length=15, null=True)),
                ('request_size', models.IntegerField(blank=True, null=True)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'api_logs',
                'indexes': [models.Index(fields=['timestamp'], name='api_logs_timesta_a73708_idx'), models.Index(fields=['device_imei'], name='api_logs_device__f7c241_idx'), models.Index(fields=['status_code'], name='api_logs_status__d9d4ce_idx')],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imei', models.CharField(db_index=True, max_length=15, unique=True)),
                ('device_name', models.CharField(blank=True, max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'devices',
                'indexes': [models.Index(fields=['imei'], name='devices_imei_fa0ada_idx'), models.Index(fields=['is_active'], name='devices_is_acti_9ea4e7_idx')],
            },
        ),
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_seen', models.DateTimeField(blank=True, null=True)),
                ('last_gps_record', models.DateTimeField(blank=True, null=True)),
                ('total_records', models.BigIntegerField(default=0)),
                ('is_online', models.BooleanField(default=False)),
                ('last_ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('connection_count', models.IntegerField(default=0)),
                ('last_connection_at', models.DateTimeField(blank=True, null=True)),
                ('last_disconnection_at', models.DateTimeField(blank=True, null=True)),
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='status', to='gps_data.device')),
            ],
            options={
                'db_table': 'device_status',
            },
        ),
        migrations.CreateModel(
            name='GPSRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('priority', models.IntegerField(default=0)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('altitude', models.IntegerField(blank=True, help_text='Altitude in meters', null=True)),
                ('speed', models.IntegerField(blank=True, help_text='Speed in km/h', null=True)),
                ('angle', models.IntegerField(blank=True, help_text='Direction angle', null=True)),
                ('satellites', models.IntegerField(blank=True, help_text='Number of satellites', null=True)),
                ('gnss_status', models.IntegerField(blank=True, help_text='IO069: 0=Off, 1=No Fix, 2=2D Fix, 3=3D Fix', null=True)),
                ('gnss_pdop', models.IntegerField(blank=True, help_text='IO181: Position Dilution of Precision', null=True)),
                ('gnss_hdop', models.IntegerField(blank=True, help_text='IO182: Horizontal Dilution of Precision', null=True)),
                ('ignition', models.BooleanField(blank=True, help_text='IO239: Ignition status', null=True)),
                ('movement', models.BooleanField(blank=True, help_text='IO240: Movement detection', null=True)),
                ('gsm_signal', models.IntegerField(blank=True, help_text='IO021: GSM signal strength (0-5)', null=True)),
                ('active_gsm_operator', models.BigIntegerField(blank=True, help_text='IO241: Active GSM operator', null=True)),
                ('iccid1', models.CharField(blank=True, help_text='IO011: SIM card ICCID1', max_length=32, null=True)),
                ('iccid2', models.CharField(blank=True, help_text='IO014: SIM card ICCID2', max_length=32, null=True)),
                ('digital_input_1', models.BooleanField(blank=True, help_text='IO001: Digital Input 1', null=True)),
                ('digital_output_1', models.BooleanField(blank=True, help_text='IO179: Digital Output 1', null=True)),
                ('digital_output_2', models.BooleanField(blank=True, help_text='IO180: Digital Output 2', null=True)),
                ('digital_output_3', models.BooleanField(blank=True, help_text='IO380: Digital Output 3', null=True)),
                ('external_voltage', models.IntegerField(blank=True, help_text='IO066: External voltage in mV', null=True)),
                ('battery_voltage', models.IntegerField(blank=True, help_text='IO067: Battery voltage in mV', null=True)),
                ('battery_level', models.IntegerField(blank=True, help_text='IO113: Battery level percentage', null=True)),
                ('battery_current', models.IntegerField(blank=True, help_text='IO068: Battery current in mA', null=True)),
                ('total_odometer', models.BigIntegerField(blank=True, help_text='IO016: Total odometer in meters', null=True)),
                ('program_number', models.IntegerField(blank=True, help_text='IO100: Program number', null=True)),
                ('door_status', models.IntegerField(blank=True, help_text='IO090: Door status CAN (bitfield)', null=True)),
                ('other_io_data', models.JSONField(blank=True, default=dict, help_text='All other IO parameters', null=True)),
                ('event_io_id', models.IntegerField(blank=True, help_text='Event IO ID', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gps_records', to='gps_data.device')),
            ],
            options={
                'db_table': 'gps_records',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', 'timestamp'], name='gps_records_device__045aad_idx'), models.Index(fields=['timestamp'], name='gps_records_timesta_6e6db5_idx'), models.Index(fields=['latitude', 'longitude'], name='gps_records_latitud_d3e4ab_idx'), models.Index(fields=['created_at'], name='gps_records_created_3e3dee_idx'), models.Index(fields=['ignition'], name='gps_records_ignitio_2e2da0_idx'), models.Index(fields=['movement'], name='gps_records_movemen_668c45_idx')],
            },
        ),
    ]
