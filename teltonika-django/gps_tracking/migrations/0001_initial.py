# Generated by Django 5.2.4 on 2025-07-06 17:26

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('imei', models.CharField(db_index=True, max_length=20, unique=True)),
                ('device_name', models.CharField(blank=True, max_length=100, null=True)),
                ('vehicle_plate', models.CharField(blank=True, max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'devices',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='IOParameter',
            fields=[
                ('io_id', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('data_type', models.CharField(choices=[('boolean', 'Boolean'), ('integer', 'Integer'), ('decimal', 'Decimal'), ('string', 'String'), ('hex', 'Hexadecimal')], max_length=20)),
                ('min_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'io_parameters',
                'ordering': ['io_id'],
            },
        ),
        migrations.CreateModel(
            name='DeviceStatus',
            fields=[
                ('device', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='status', serialize=False, to='gps_tracking.device')),
                ('last_seen', models.DateTimeField()),
                ('is_online', models.BooleanField(default=False)),
                ('last_latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('last_longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('last_speed', models.IntegerField(blank=True, null=True)),
                ('last_ignition', models.BooleanField(blank=True, null=True)),
                ('last_movement', models.BooleanField(blank=True, null=True)),
                ('last_battery_level', models.IntegerField(blank=True, null=True)),
                ('last_gsm_signal', models.IntegerField(blank=True, null=True)),
                ('total_distance', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'device_status',
            },
        ),
        migrations.CreateModel(
            name='DeviceEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField()),
                ('event_type', models.CharField(choices=[('ignition_on', 'Ignition On'), ('ignition_off', 'Ignition Off'), ('movement_start', 'Movement Started'), ('movement_stop', 'Movement Stopped'), ('geofence_enter', 'Geofence Enter'), ('geofence_exit', 'Geofence Exit'), ('overspeed', 'Overspeed'), ('low_battery', 'Low Battery'), ('power_disconnected', 'Power Disconnected'), ('crash_detection', 'Crash Detection'), ('jamming', 'Signal Jamming'), ('panic_button', 'Panic Button'), ('custom', 'Custom Event')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('acknowledged', models.BooleanField(default=False)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_by', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='gps_tracking.device')),
            ],
            options={
                'db_table': 'device_events',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', '-timestamp'], name='device_even_device__33fc26_idx'), models.Index(fields=['event_type'], name='device_even_event_t_ab3235_idx'), models.Index(fields=['acknowledged'], name='device_even_acknowl_5f1e45_idx')],
            },
        ),
        migrations.CreateModel(
            name='GPSRecord',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(db_index=True)),
                ('received_at', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=7, max_digits=10, null=True)),
                ('altitude', models.IntegerField(blank=True, null=True)),
                ('speed', models.IntegerField(blank=True, null=True)),
                ('satellites', models.IntegerField(blank=True, null=True)),
                ('gnss_status', models.CharField(blank=True, max_length=20, null=True)),
                ('gnss_pdop', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('gnss_hdop', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('ignition', models.BooleanField(blank=True, null=True)),
                ('movement', models.BooleanField(blank=True, null=True)),
                ('gsm_signal', models.IntegerField(blank=True, null=True)),
                ('active_gsm_operator', models.BigIntegerField(blank=True, null=True)),
                ('digital_input_1', models.BooleanField(blank=True, null=True)),
                ('digital_output_1', models.BooleanField(blank=True, null=True)),
                ('digital_output_2', models.BooleanField(blank=True, null=True)),
                ('digital_output_3', models.BooleanField(blank=True, null=True)),
                ('external_voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('battery_voltage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('battery_level', models.IntegerField(blank=True, null=True)),
                ('battery_current', models.IntegerField(blank=True, null=True)),
                ('total_odometer', models.DecimalField(blank=True, decimal_places=1, max_digits=10, null=True)),
                ('iccid1', models.CharField(blank=True, max_length=20, null=True)),
                ('iccid2', models.CharField(blank=True, max_length=20, null=True)),
                ('program_number', models.IntegerField(blank=True, null=True)),
                ('door_status', models.CharField(blank=True, max_length=200, null=True)),
                ('additional_parameters', models.JSONField(blank=True, default=dict)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('event_io_id', models.IntegerField(blank=True, null=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gps_records', to='gps_tracking.device')),
            ],
            options={
                'db_table': 'gps_records',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['device', '-timestamp'], name='gps_records_device__11fa06_idx'), models.Index(fields=['timestamp'], name='gps_records_timesta_6e6db5_idx'), models.Index(fields=['received_at'], name='gps_records_receive_3e619b_idx'), models.Index(fields=['latitude', 'longitude'], name='gps_records_latitud_d3e4ab_idx')],
            },
        ),
    ]
